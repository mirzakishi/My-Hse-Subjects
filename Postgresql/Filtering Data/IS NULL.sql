-----------------------------------------------------------------------------------------------------------------------
-- Summary: in this tutorial, you will learn how to use the PostgreSQL IS NULL operator
-- to check if a value is NULL or not.

-- Assuming that you have a contacts table that stores the first name, last name, email, and phone number of contacts.
-- At the time of recording the contact, you may not know the contactâ€™s phone number. To deal with this,
-- you define the phone column as a nullable column and insert NULL
-- into the phone column when you save the contact information.

CREATE TABLE contacts(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(255) NOT NULL,
    phone VARCHAR(15),
    PRIMARY KEY (id)
);

-- The following statement inserts two contacts, one has a phone number and the other does not:
INSERT INTO contacts(first_name, last_name, email, phone)
VALUES ('John','Doe','john.doe@example.com',NULL),
    ('Lily','Bush','lily.bush@example.com','(408-234-2764)');

-- To find the contact who does not have a phone number you may come up with the following statement:
SELECT
    id,
    first_name,
    last_name,
    email,
    phone
FROM
    contacts
WHERE
    phone = NULL;
-- Note: Even though there is a NULL in the phone column, the expression NULL = NULL returns false.
-- This is because NULL is not equal to any value even itself.
--To check whether a value is NULL or not, you use the IS NULL operator instead:

SELECT
    id,
    first_name,
    last_name,
    email,
    phone
FROM
    contacts
WHERE
    phone IS NULL;

-- To check if a value is not NULL, you use the IS NOT NULL operator:
SELECT
    id,
    first_name,
    last_name,
    email,
    phone
FROM
    contacts
WHERE
    phone IS NOT NULL;
-----------------------------------------------------------------------------------------------------------------------
